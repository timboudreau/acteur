<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<project
    xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.mastfrog</groupId>
        <artifactId>mastfrog-parent</artifactId>
        <version>3.0.0</version>
        <relativePath/>
    </parent>

    <artifactId>acteur</artifactId>

    <url>https://github.com/timboudreau/acteur</url>
    <name>Acteur</name>

    <dependencies>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>annotation-processors</artifactId>
            <scope>provided</scope>
            <version>${mastfrog.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>acteur-annotations</artifactId>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>acteur-base</artifactId>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>util-function</artifactId>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>util-misc</artifactId>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>acteur-headers</artifactId>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>url</artifactId>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>giulius-threadpool</artifactId>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>marshaller-registry</artifactId>
        </dependency>
        <dependency>
            <groupId>org.javassist</groupId>
            <artifactId>javassist</artifactId>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcpkix-jdk15on</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- We are almost done with netty-http-test-harness, but there is
        one test, WebSocketTest, which utilizes the ability to turn off
        chunked encoding and write raw data to the socket, which would
        be hard to replicate using the JDK's http client. -->
        <dependency>
            <groupId>${mastfrog.groupId}</groupId>
            <artifactId>netty-http-test-harness</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${mastfrog.groupId}</groupId>
            <artifactId>http-test-harness-acteur</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${mastfrog.groupId}</groupId>
            <artifactId>giulius-tests</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${mastfrog.groupId}</groupId>
            <artifactId>giulius-junit5-tests</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <inceptionYear>2011</inceptionYear>

    <issueManagement>
        <system>Github</system>
        <url>https://github.com/timboudreau/acteur/issues</url>
    </issueManagement>

    <scm>
        <url>https://github.com/timboudreau/acteur.git</url>
        <connection>scm:git:https://github.com/timboudreau/acteur.git</connection>
        <developerConnection>git@github.com/timboudreau/acteur.git</developerConnection>
    </scm>

    <organization>
        <name>Mastfrog Technologies</name>
        <url>https://mastfrog.com</url>
    </organization>

    <licenses>
        <license>
            <name>MIT</name>
            <url>https://opensource.org/licenses/MIT</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>Tim Boudreau</name>
            <email>tim@timboudreau.com</email>
            <url>https://timboudreau.com</url>
        </developer>
    </developers>

    <build>
        <plugins>
            <plugin>

                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>

                <executions>

                    <execution>
                        <id>prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>post-unit-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>target/jacoco.exec</dataFile>
                            <outputDirectory>target/jacoco-ut</outputDirectory>
                        </configuration>
                    </execution>

                </executions>

                <configuration>
                    <systemPropertyVariables>
                        <jacoco-agent.destfile>target/jacoco.exec</jacoco-agent.destfile>
                    </systemPropertyVariables>
                </configuration>

            </plugin>            
        </plugins>
    </build>

</project>
